// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: swipe.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message to define a swipe action
type SwipeAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                    // Unique identifier for the swipe
	SwiperId        uint32 `protobuf:"varint,2,opt,name=swiper_id,json=swiperId,proto3" json:"swiper_id,omitempty"`                        // User ID of the swiper
	SwipedProfileId uint32 `protobuf:"varint,3,opt,name=swiped_profile_id,json=swipedProfileId,proto3" json:"swiped_profile_id,omitempty"` // User ID of the profile being swiped
	Action          string `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`                                             // Swipe action: 'like' or 'pass'
	Timestamp       string `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                       // Timestamp of the swipe
}

func (x *SwipeAction) Reset() {
	*x = SwipeAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swipe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwipeAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwipeAction) ProtoMessage() {}

func (x *SwipeAction) ProtoReflect() protoreflect.Message {
	mi := &file_swipe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwipeAction.ProtoReflect.Descriptor instead.
func (*SwipeAction) Descriptor() ([]byte, []int) {
	return file_swipe_proto_rawDescGZIP(), []int{0}
}

func (x *SwipeAction) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SwipeAction) GetSwiperId() uint32 {
	if x != nil {
		return x.SwiperId
	}
	return 0
}

func (x *SwipeAction) GetSwipedProfileId() uint32 {
	if x != nil {
		return x.SwipedProfileId
	}
	return 0
}

func (x *SwipeAction) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SwipeAction) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

// Request to record a swipe action
type RecordSwipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SwiperId        uint32 `protobuf:"varint,1,opt,name=swiper_id,json=swiperId,proto3" json:"swiper_id,omitempty"`                        // User ID of the swiper
	SwipedProfileId uint32 `protobuf:"varint,2,opt,name=swiped_profile_id,json=swipedProfileId,proto3" json:"swiped_profile_id,omitempty"` // User ID of the profile being swiped
	Action          string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`                                             // Swipe action: 'like' or 'pass'
}

func (x *RecordSwipeRequest) Reset() {
	*x = RecordSwipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swipe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordSwipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordSwipeRequest) ProtoMessage() {}

func (x *RecordSwipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swipe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordSwipeRequest.ProtoReflect.Descriptor instead.
func (*RecordSwipeRequest) Descriptor() ([]byte, []int) {
	return file_swipe_proto_rawDescGZIP(), []int{1}
}

func (x *RecordSwipeRequest) GetSwiperId() uint32 {
	if x != nil {
		return x.SwiperId
	}
	return 0
}

func (x *RecordSwipeRequest) GetSwipedProfileId() uint32 {
	if x != nil {
		return x.SwipedProfileId
	}
	return 0
}

func (x *RecordSwipeRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Response after recording a swipe action
type RecordSwipeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string       `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // Status message (e.g., "Swipe recorded successfully")
	Swipe  *SwipeAction `protobuf:"bytes,2,opt,name=swipe,proto3" json:"swipe,omitempty"`   // The recorded swipe action
}

func (x *RecordSwipeResponse) Reset() {
	*x = RecordSwipeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swipe_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordSwipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordSwipeResponse) ProtoMessage() {}

func (x *RecordSwipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swipe_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordSwipeResponse.ProtoReflect.Descriptor instead.
func (*RecordSwipeResponse) Descriptor() ([]byte, []int) {
	return file_swipe_proto_rawDescGZIP(), []int{2}
}

func (x *RecordSwipeResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RecordSwipeResponse) GetSwipe() *SwipeAction {
	if x != nil {
		return x.Swipe
	}
	return nil
}

// Request to get profile suggestions
type GetSuggestionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID of the user requesting suggestions
	Limit  uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                 // Number of profiles to suggest
}

func (x *GetSuggestionsRequest) Reset() {
	*x = GetSuggestionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swipe_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuggestionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuggestionsRequest) ProtoMessage() {}

func (x *GetSuggestionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swipe_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuggestionsRequest.ProtoReflect.Descriptor instead.
func (*GetSuggestionsRequest) Descriptor() ([]byte, []int) {
	return file_swipe_proto_rawDescGZIP(), []int{3}
}

func (x *GetSuggestionsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetSuggestionsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Response with a list of suggested profiles
type GetSuggestionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*Profile `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"` // List of suggested profiles
}

func (x *GetSuggestionsResponse) Reset() {
	*x = GetSuggestionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swipe_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuggestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuggestionsResponse) ProtoMessage() {}

func (x *GetSuggestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swipe_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuggestionsResponse.ProtoReflect.Descriptor instead.
func (*GetSuggestionsResponse) Descriptor() ([]byte, []int) {
	return file_swipe_proto_rawDescGZIP(), []int{4}
}

func (x *GetSuggestionsResponse) GetProfiles() []*Profile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

// Message to define a user profile
type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            // Unique identifier for the profile
	Username string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` // Username of the profile
	Age      int32    `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`          // Age of the profile
	Bio      string   `protobuf:"bytes,4,opt,name=bio,proto3" json:"bio,omitempty"`           // Bio of the profile
	Photos   []string `protobuf:"bytes,5,rep,name=photos,proto3" json:"photos,omitempty"`     // URLs of profile photos
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swipe_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_swipe_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_swipe_proto_rawDescGZIP(), []int{5}
}

func (x *Profile) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Profile) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Profile) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Profile) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *Profile) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

// Request to get swipe history
type GetSwipeHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID for whom swipe history is requested
	Limit  uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                 // Number of history records to fetch
	Offset uint32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`               // Pagination offset
}

func (x *GetSwipeHistoryRequest) Reset() {
	*x = GetSwipeHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swipe_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSwipeHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSwipeHistoryRequest) ProtoMessage() {}

func (x *GetSwipeHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swipe_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSwipeHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetSwipeHistoryRequest) Descriptor() ([]byte, []int) {
	return file_swipe_proto_rawDescGZIP(), []int{6}
}

func (x *GetSwipeHistoryRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetSwipeHistoryRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSwipeHistoryRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// Response with a list of swipe actions
type GetSwipeHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Swipes []*SwipeAction `protobuf:"bytes,1,rep,name=swipes,proto3" json:"swipes,omitempty"` // List of swipe actions
}

func (x *GetSwipeHistoryResponse) Reset() {
	*x = GetSwipeHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swipe_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSwipeHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSwipeHistoryResponse) ProtoMessage() {}

func (x *GetSwipeHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swipe_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSwipeHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetSwipeHistoryResponse) Descriptor() ([]byte, []int) {
	return file_swipe_proto_rawDescGZIP(), []int{7}
}

func (x *GetSwipeHistoryResponse) GetSwipes() []*SwipeAction {
	if x != nil {
		return x.Swipes
	}
	return nil
}

var File_swipe_proto protoreflect.FileDescriptor

var file_swipe_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x77, 0x69, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73,
	0x77, 0x69, 0x70, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x0b, 0x53, 0x77, 0x69, 0x70, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77, 0x69, 0x70, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x77, 0x69, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x77, 0x69, 0x70, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x77,
	0x69, 0x70, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x75, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x77, 0x69,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x77, 0x69,
	0x70, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x77,
	0x69, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x77, 0x69, 0x70, 0x65, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x73, 0x77, 0x69, 0x70, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x13, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x53, 0x77, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x77, 0x69,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x77, 0x69, 0x70, 0x65,
	0x2e, 0x53, 0x77, 0x69, 0x70, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x73, 0x77,
	0x69, 0x70, 0x65, 0x22, 0x46, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x44, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x77, 0x69, 0x70, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x22, 0x71, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x22, 0x5f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x77, 0x69, 0x70, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x45, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x77, 0x69, 0x70,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x06, 0x73, 0x77, 0x69, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x77, 0x69, 0x70, 0x65, 0x2e, 0x53, 0x77, 0x69, 0x70, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x73, 0x77, 0x69, 0x70, 0x65, 0x73, 0x32, 0xf5, 0x01, 0x0a,
	0x0c, 0x53, 0x77, 0x69, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a,
	0x0b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x77, 0x69, 0x70, 0x65, 0x12, 0x19, 0x2e, 0x73,
	0x77, 0x69, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x77, 0x69, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x77, 0x69, 0x70, 0x65, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x77, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x73, 0x77, 0x69, 0x70, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x77, 0x69, 0x70, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x77, 0x69, 0x70, 0x65, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x73, 0x77, 0x69, 0x70, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x77, 0x69, 0x70, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x77, 0x69, 0x70, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x77, 0x69, 0x70, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_swipe_proto_rawDescOnce sync.Once
	file_swipe_proto_rawDescData = file_swipe_proto_rawDesc
)

func file_swipe_proto_rawDescGZIP() []byte {
	file_swipe_proto_rawDescOnce.Do(func() {
		file_swipe_proto_rawDescData = protoimpl.X.CompressGZIP(file_swipe_proto_rawDescData)
	})
	return file_swipe_proto_rawDescData
}

var file_swipe_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_swipe_proto_goTypes = []any{
	(*SwipeAction)(nil),             // 0: swipe.SwipeAction
	(*RecordSwipeRequest)(nil),      // 1: swipe.RecordSwipeRequest
	(*RecordSwipeResponse)(nil),     // 2: swipe.RecordSwipeResponse
	(*GetSuggestionsRequest)(nil),   // 3: swipe.GetSuggestionsRequest
	(*GetSuggestionsResponse)(nil),  // 4: swipe.GetSuggestionsResponse
	(*Profile)(nil),                 // 5: swipe.Profile
	(*GetSwipeHistoryRequest)(nil),  // 6: swipe.GetSwipeHistoryRequest
	(*GetSwipeHistoryResponse)(nil), // 7: swipe.GetSwipeHistoryResponse
}
var file_swipe_proto_depIdxs = []int32{
	0, // 0: swipe.RecordSwipeResponse.swipe:type_name -> swipe.SwipeAction
	5, // 1: swipe.GetSuggestionsResponse.profiles:type_name -> swipe.Profile
	0, // 2: swipe.GetSwipeHistoryResponse.swipes:type_name -> swipe.SwipeAction
	1, // 3: swipe.SwipeService.RecordSwipe:input_type -> swipe.RecordSwipeRequest
	3, // 4: swipe.SwipeService.GetSuggestions:input_type -> swipe.GetSuggestionsRequest
	6, // 5: swipe.SwipeService.GetSwipeHistory:input_type -> swipe.GetSwipeHistoryRequest
	2, // 6: swipe.SwipeService.RecordSwipe:output_type -> swipe.RecordSwipeResponse
	4, // 7: swipe.SwipeService.GetSuggestions:output_type -> swipe.GetSuggestionsResponse
	7, // 8: swipe.SwipeService.GetSwipeHistory:output_type -> swipe.GetSwipeHistoryResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_swipe_proto_init() }
func file_swipe_proto_init() {
	if File_swipe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_swipe_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SwipeAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swipe_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RecordSwipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swipe_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RecordSwipeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swipe_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetSuggestionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swipe_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetSuggestionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swipe_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swipe_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetSwipeHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swipe_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetSwipeHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_swipe_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_swipe_proto_goTypes,
		DependencyIndexes: file_swipe_proto_depIdxs,
		MessageInfos:      file_swipe_proto_msgTypes,
	}.Build()
	File_swipe_proto = out.File
	file_swipe_proto_rawDesc = nil
	file_swipe_proto_goTypes = nil
	file_swipe_proto_depIdxs = nil
}
